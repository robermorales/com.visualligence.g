package com.visualligence.g.generator;

import java.util.Date;
import org.eclipse.emf.common.util.URI;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.IFileSystemAccess;
import org.eclipse.xtext.generator.IGenerator;

/**
 * import org.eclipse.emf.ecore.EObject
 * import org.eclipse.xtext.generator.parser.antlr.splitting.simpleExpressions.NumberLiteral
 * 
 * import com.visualligence.g.vML.Box
 * import com.visualligence.g.vML.Constant
 * import com.visualligence.g.vML.ConstantRef
 * import com.visualligence.g.vML.Factory
 * import com.visualligence.g.vML.InputRef
 * import com.visualligence.g.vML.Module
 * import com.visualligence.g.vML.Operation
 * import com.visualligence.g.vML.Sentence
 * import com.visualligence.g.vML.SequenceLiteralPlain
 * import com.visualligence.g.vML.SequenceLiteralSerie
 * import com.visualligence.g.vML.ShapeRef
 * import com.visualligence.g.vML.TupleLiteral
 * import com.visualligence.g.vML.UnaryOperation
 * import com.visualligence.g.vML.TypeRef
 * import com.visualligence.g.vML.NumberTypeRef
 * import com.visualligence.g.vML.SequenceTypeRef
 * import com.visualligence.g.vML.BoxRef
 * import com.visualligence.g.vML.VoidTypeRef
 * import com.visualligence.g.vML.LiteralExpression
 * import com.visualligence.g.vML.Stream
 * import com.visualligence.g.vML.LStreamValue
 * import com.visualligence.g.vML.RStreamValue
 * import com.visualligence.g.vML.OutputRef
 * import com.visualligence.g.vML.AuxTypeRef
 * import com.visualligence.g.vML.AuxType
 * import com.visualligence.g.vML.Op
 * import com.visualligence.g.vML.SingleLiteral
 */
@SuppressWarnings("all")
public class VMLGenerator implements IGenerator {
  public String base(final String uri) {
    int _indexOf = uri.indexOf(".");
    return uri.substring(0, _indexOf);
  }
  
  public String cName(final Resource r) {
    URI _uRI = r.getURI();
    String _lastSegment = _uRI.lastSegment();
    return this.base(_lastSegment);
  }
  
  public String pName(final Resource r) {
    String _cName = this.cName(r);
    String _plus = ("com/visualligence/gen/" + _cName);
    return (_plus + "/");
  }
  
  public CharSequence automark() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("File autogenerated by VML at ");
    Date _date = new Date();
    _builder.append(_date, "");
    return _builder;
  }
  
  public void doGenerate(final Resource resource, final IFileSystemAccess fsa) {
    String _pName = this.pName(resource);
    String _cName = this.cName(resource);
    String _plus = (_pName + _cName);
    String _plus_1 = (_plus + ".dump.txt");
    fsa.generateFile(_plus_1, "as");
  }
}
