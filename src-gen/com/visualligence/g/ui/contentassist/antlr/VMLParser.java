/*
* generated by Xtext
*/
package com.visualligence.g.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import com.visualligence.g.services.VMLGrammarAccess;

public class VMLParser extends AbstractContentAssistParser {
	
	@Inject
	private VMLGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected com.visualligence.g.ui.contentassist.antlr.internal.InternalVMLParser createParser() {
		com.visualligence.g.ui.contentassist.antlr.internal.InternalVMLParser result = new com.visualligence.g.ui.contentassist.antlr.internal.InternalVMLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getModuleAccess().getGroup(), "rule__Module__Group__0");
					put(grammarAccess.getModuleAccess().getGroup_1(), "rule__Module__Group_1__0");
					put(grammarAccess.getModuleAccess().getGroup_2(), "rule__Module__Group_2__0");
					put(grammarAccess.getModuleAccess().getGroup_3(), "rule__Module__Group_3__0");
					put(grammarAccess.getTypeDeclAccess().getGroup(), "rule__TypeDecl__Group__0");
					put(grammarAccess.getHashAccess().getGroup(), "rule__Hash__Group__0");
					put(grammarAccess.getHashAccess().getGroup_2(), "rule__Hash__Group_2__0");
					put(grammarAccess.getHashAccess().getGroup_2_1(), "rule__Hash__Group_2_1__0");
					put(grammarAccess.getHashItemAccess().getGroup(), "rule__HashItem__Group__0");
					put(grammarAccess.getInputAccess().getGroup(), "rule__Input__Group__0");
					put(grammarAccess.getOutputAccess().getGroup(), "rule__Output__Group__0");
					put(grammarAccess.getModuleAccess().getTypesAssignment_1_1(), "rule__Module__TypesAssignment_1_1");
					put(grammarAccess.getModuleAccess().getInputAssignment_2_1(), "rule__Module__InputAssignment_2_1");
					put(grammarAccess.getModuleAccess().getOutputAssignment_3_1(), "rule__Module__OutputAssignment_3_1");
					put(grammarAccess.getTypeDeclAccess().getNameAssignment_2(), "rule__TypeDecl__NameAssignment_2");
					put(grammarAccess.getHashAccess().getItemsAssignment_2_0(), "rule__Hash__ItemsAssignment_2_0");
					put(grammarAccess.getHashAccess().getItemsAssignment_2_1_1(), "rule__Hash__ItemsAssignment_2_1_1");
					put(grammarAccess.getHashItemAccess().getNameAssignment_1(), "rule__HashItem__NameAssignment_1");
					put(grammarAccess.getHashItemAccess().getTypeAssignment_3(), "rule__HashItem__TypeAssignment_3");
					put(grammarAccess.getInputAccess().getNameAssignment_0(), "rule__Input__NameAssignment_0");
					put(grammarAccess.getInputAccess().getTypeAssignment_2(), "rule__Input__TypeAssignment_2");
					put(grammarAccess.getOutputAccess().getNameAssignment_0(), "rule__Output__NameAssignment_0");
					put(grammarAccess.getOutputAccess().getTypeAssignment_2(), "rule__Output__TypeAssignment_2");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			com.visualligence.g.ui.contentassist.antlr.internal.InternalVMLParser typedParser = (com.visualligence.g.ui.contentassist.antlr.internal.InternalVMLParser) parser;
			typedParser.entryRuleModule();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public VMLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(VMLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
